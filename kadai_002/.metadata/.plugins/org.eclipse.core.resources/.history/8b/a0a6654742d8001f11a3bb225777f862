package com.example.samuraitabelog.service;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.samuraitabelog.entity.Reservation;
import com.example.samuraitabelog.entity.Restaurant;
import com.example.samuraitabelog.entity.User;
import com.example.samuraitabelog.form.ReservationEditForm;
import com.example.samuraitabelog.form.ReservationRegisterForm;
import com.example.samuraitabelog.repository.ReservationRepository;
import com.example.samuraitabelog.repository.RestaurantRepository;
import com.example.samuraitabelog.repository.UserRepository;

@Service
public class ReservationService {
	private final ReservationRepository reservationRepository;
	private final RestaurantRepository RestaurantRepository;
	private final UserRepository userRepository; 
	
	public ReservationService(ReservationRepository reservationRepository, RestaurantRepository RestaurantRepository, UserRepository userRepository ) {
		this.reservationRepository = reservationRepository;
		this.RestaurantRepository = RestaurantRepository;
		this.userRepository = userRepository;
	}
	
	@Transactional
	public void create(User user, Restaurant restaurant, ReservationRegisterForm reservationRegisterForm) {
		Reservation reservation = new Reservation();
		  
		reservation.setRestaurant(restaurant);
		reservation.setUser(user);
		reservation.setBookingDate(reservationRegisterForm.getBookingDate());
		reservation.setStartTime(reservationRegisterForm.getBookingTime());
		reservation.setEndTime(reservationRegisterForm.getBookingTime().plusHours(reservationRegisterForm.getStayTime()));
		reservation.setNumberOfPeople(reservationRegisterForm.getNumberOfPeople());
		
		reservationRepository.save(reservation);				
	}
	
	@Transactional
	public void update(User user, Restaurant restaurant, ReservationEditForm reservationEditForm) {
		Reservation reservation = reservationRepository.getReferenceById(reservationEditForm.getId());
		  
		reservation.setRestaurant(restaurant);
		reservation.setUser(user);
		reservation.setBookingDate(reservationEditForm.getBookingDate());
		reservation.setStartTime(reservationEditForm.getBookingTime());
		reservation.setEndTime(reservationEditForm.getBookingTime().plusHours(reservationEditForm.getStayTime()));
		reservation.setNumberOfPeople(reservationEditForm.getNumberOfPeople());
		
		reservationRepository.save(reservation);				
	}
}

